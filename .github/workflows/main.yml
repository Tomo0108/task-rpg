name: EC2 auto deploy

# このWorkflowはGitHubにpushされたときに自動的にトリガーされる
on:
  push:
    branches:
      - main  # mainブランチへのpushのみをトリガーに設定
  workflow_dispatch:  # 手動トリガーを可能にする

jobs:
  build:
    runs-on: ubuntu-latest  # Ubuntu最新バージョンのランナーで実行
    steps:
      # IP取得ライブラリをインストール
      - name: Public IP Install
        id: ip
        uses: haythem/public-ip@v1.3

      # リポジトリをCheckout
      - name: Checkout
        uses: actions/checkout@v2

      # AWS CLIをインストールする
      - name: AWS CLI install
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # AWS CLIにキーを設定をする
      - name: AWS set Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1  # リージョンは東京(ap-northeast-1)に設定

      # Gitがインストールされているか確認し、インストールする
      - name: Install Git if not present
        run: |
          if ! command -v git &> /dev/null
          then
            echo "Git is not installed. Installing..."
            sudo apt-get update
            sudo apt-get install git
          else
            echo "Git is already installed."
          fi

      # デプロイを行う
      - name: Deploy
        run: |
          # IPアドレス取得
          IP_ADDRESS="${{ steps.ip.outputs.ipv4 }}/32"
    
          # セキュリティグループルールを追加する前に確認
          EXISTS=$(aws ec2 describe-security-groups --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --query 'SecurityGroups[].IpPermissions[?ToPort==`22` && FromPort==`22` && IpProtocol==`tcp` && contains(IpRanges[].CidrIp, `'"$IP_ADDRESS"'`)]' --output text)
          if [ -z "$EXISTS" ]; then
            echo "Adding new rule for $IP_ADDRESS"
            aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP_ADDRESS
          fi

          # SSH接続して、必要なディレクトリを作成し、git操作を行う
          ssh-agent bash -c 'ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}"); ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }} "mkdir -p /home/ec2-user/task-rpg && cd /home/ec2-user/task-rpg && git fetch --prune && git checkout main and git pull origin main"'

          # セキュリティグループのルール削除のタイミングと条件を確認して、必要に応じて削除
          if [ -n "$EXISTS" ]; then
            echo "Removing rule for $IP_ADDRESS"
            aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr $IP_ADDRESS
          fi
          